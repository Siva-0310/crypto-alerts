services:
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user           
      - POSTGRES_PASSWORD=password    
      - POSTGRES_DB=crypto            
    volumes:
      - postgres_data:/var/lib/postgresql/data 
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql 

  tickmq:
    image: rabbitmq:latest
    container_name: tickmq
    ports:
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - tickmq_data:/var/lib/rabbitmq  

  alertmq:
    image: rabbitmq:latest
    container_name: alertmq
    ports:
      - "5673:5672"  
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - alertmq_data:/var/lib/rabbitmq

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  ticker:
    build: ./ticker
    container_name: ticker
    depends_on:
      - tickmq
    environment:
      - RABBIT=amqp://user:password@tickmq
      - QUEUE=ticks
      - ALERT=amqp://user:password@alertmq
      - ALERTQUEUE=alerts
      - CONCURRENCY=5
      - DURATION=5s
      - WEBSOCKET=wss://ws.coincap.io/prices?assets=bitcoin,ethereum,monero,litecoin

  dispatcher:
    build: ./dispatcher
    container_name: dispatcher
    depends_on:
      - postgres
      - alertmq
      - redis
      - tickmq                        # Ensure dispatcher waits for Redis service
    environment:
      - TICK=amqp://user:password@tickmq
      - TICKQUEUE=ticks
      - ALERT=amqp://user:password@alertmq
      - ALERTQUEUE=alerts
      - CONCURRENCY=6
      - POSTGRES=postgres://user:password@postgres/crypto
      - REDIS=redis://:@redis:6379  # Redis connection URL

volumes:
  postgres_data:
  tickmq_data:
  alertmq_data: